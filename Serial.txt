Question
Person class implements Serializable with
	private String name
	private int age

		getters and setters
		parameterized constructor
Student extends Person
	private int rollno
		getter and setters
		parameterized constructor accepting name,age and rollno
			pass name and age to the super constructor
Serial class with main
	create one object of Student, write it inside file and then read.
------------------------------------------------------------------------------------------------
package Files;

import java.io.*;
import java.io.Serializable;

public class serial {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Student s = new Student(12, "Ajay", 65);
		try {
			FileOutputStream fos = new FileOutputStream("C:\\Users\\admin\\Desktop\\S_40\\Serial.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fos);
			oos.writeObject(s);
			oos.close();
		} catch (Exception e) {
			System.out.println(e);
		}
		System.out.println(s.age + "\t" + s.name + "\t" + s.rollno);
		s = null;
		try {
			FileInputStream fis = new FileInputStream("C:\\Users\\admin\\Desktop\\S_40\\Serial.txt");
			ObjectInputStream ois = new ObjectInputStream(fis);
			Student s5 = (Student) ois.readObject();
			System.out.println(s5.age + "\t" + s5.name + "\t" + s5.rollno);
			ois.close();
		} catch (Exception e) {
			System.out.println(e);
		}

	}

}

class Person implements Serializable {
	int age;
	String name;

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	Person(int age, String name) {
		this.name = name;
		this.age = age;
	}
}

class Student extends Person {
	int rollno;

	Student() {
		super(19, "farad");
		this.rollno = rollno;
	}

	Student(int age, String name, int rollno) {
		super(age, name);
		this.rollno = rollno;

	}

	public int getRollno() {
		return rollno;
	}

	public void setRollno(int rollno) {
		this.rollno = rollno;
	}
}
-------------------------------------------------------------------------------------------
/*6) create a class "Car" with some members. ( do not implement "Serializable" for "Car")
Derive a class "Nano" from it. have some members in "Nano" also. (implement "Serializable")
instantiate "Nano" and store this instance in a file. (Serialization).
read the file and read the object of "Nano" .		(Deserialiation) . 
Observe what happens when u serialize a child class.
is it persist ur parent class also ? */

package Files;

import java.io.*;

public class Vehicle {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Nano n = new Nano();
		n.place = "Mumbai";
		n.uid = 106;
		n.modelid = "Nano-XOXO";
		try {
			FileOutputStream fis = new FileOutputStream(
					"C:\\Users\\admin\\Desktop\\DAC_DBDA_Aug_19_JavaSE\\Day_5\\With_Serializable\\serial.txt");
			ObjectOutputStream oos = new ObjectOutputStream(fis);
			oos.writeObject(n);
			System.out.println(n.modelid + "\t" + n.place + "\t" + n.uid);
			oos.close();
		} catch (Exception e) {
			System.out.println(e);
		}
		n = null;
		try {
			FileInputStream fos = new FileInputStream(
					"C:\\Users\\admin\\Desktop\\DAC_DBDA_Aug_19_JavaSE\\Day_5\\With_Serializable\\serial.txt");
			ObjectInputStream ois = new ObjectInputStream(fos);
			Nano n1 = (Nano) ois.readObject();
			System.out.println(n1.modelid + "\t" + n1.place + "\t" + n1.uid);
			ois.close();
		} catch (Exception e) {
			System.out.println(e);
		}

	}

}

class Car {
	int uid = 523;
	String place = "Delhi";

	Car() {
		this.place = place;
		this.uid = uid;
	}

}

class Nano extends Car implements Serializable {

	String modelid;

	Nano() {
		super();
		this.modelid = modelid;
	}

}
-------------------------------------------------------------------------------------------
/*5) using RandomAccessFile class create a file.
accept a message from user and write in a file.
now read the message which u haven a file at the end of existing message.
now read the entire content of file stored in a file.
now again accept a message and write in file . ( u should be able to read both the messages now)*/
package Files;
import java.io.*;

public class RandomAccess {

	public static void main(String[] args) {
		// TODO Auto-generated method stub	}
		try(RandomAccessFile rf=new RandomAccessFile("e:\\random.txt","rw"))
		{
		rf.seek(rf.length());
		System.out.println("Enter");
		byte b[]=new byte[200];
		int k=System.in.read(b);
		rf.write(b,0,k);
		rf.seek(0);
		byte c[]=new byte[(int)rf.length()];
		rf.read(c);
		String ss=new String(c);
		System.out.println(ss);
		rf.seek(rf.length());
		System.out.println("Again");
		k=System.in.read(b);
		rf.write(b,0,k);
		rf.seek(0);
		c=new byte[(int)rf.length()];
		rf.read(c);
		ss=new String(c);
		System.out.println(ss);
		}
	catch(Exception ee)
	{
		ee.printStackTrace();
	}
		
}
}
-------------------------------------------------------------------------------------------
